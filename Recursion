#include <bits/stdc++.h>
using namespace std;

//Q5. Sum of first n terms
//Given an integer n, calculate the sum of series 13 + 23 + 33 + 43 + â€¦ till n-th term.

int sumOfSeries(int n) {
        // code here
        if(n==0) return 0;
        return (n*n*n) + sumOfSeries(n-1);
    }

//Q6. Factorials Less than or Equal to n

int sum = 0;
    vector<long long> factorialNumbers(long long n) {
        // Write Your Code here
        vector<long long> result;
        long long fact = 1;
        int i = 1;
        
        while(fact<=n){
            result.push_back(fact);
            i++;
            fact *= i;
        }
        
        return result;
    }

//Q7. Reverse an Array

void reverseArray(vector<int> &arr, int i = 0) {
        // code here
    if( i>=arr.size()/2) return;
    
    swap(arr[i],arr[arr.size()-i-1]);
    reverseArray(arr, i+1);
    }

//q8. bool isPalindrome(string s, int i = 0) {
            string filtered;

        for (char c : s) {
            if (isalnum(c)) {
                filtered += tolower(c);
            }
        }

        int n = filtered.size();
        // Base case: if we reach the middle, it's a palindrome
        if (i >= n / 2) return true;

        // If characters at current positions don't match, return false
        if (filtered[i] != filtered[n - i - 1]) return false;

        // Recursive call to check the next pair of characters
        return isPalindrome(filtered, i + 1);
    }

//q9. fibonacci

int fib(int n) {
        if(n<=1){
            return n;
        }
        
        int last = fib(n-1);
        int slast = fib(n-2);
        return last + slast;
    }
